{"version":3,"sources":["components/notification/notification.module.css","components/feedback/feedback.js","components/statistics/statistics.js","components/section/section.js","components/notification/notification.js","App.js","index.js","components/statistics/statistics.module.css","components/section/section.module.css","components/feedback/feedback.module.css"],"names":["module","exports","Feedback","options","onLeaveFeedback","ucFirst","buttonsNames","Object","keys","map","button","className","s","type","onClick","Statistics","good","bad","neutral","total","positivePercentage","item","Section","title","children","section","head","Notification","message","App","state","totalFeedback","countPositiveFeedbackPercentage","Math","round","clickOnButton","buttonName","setState","prevState","string","charAt","toUpperCase","slice","this","percentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,uIC0BbC,MAzBf,YAA0D,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACtCC,EAAeC,OAAOC,KAAKL,GACjC,OACE,8BACGG,EAAaG,KAAI,SAAAC,GAChB,OACE,wBAEEC,UAAWC,IAAEF,OACbG,KAAK,SACLC,QAAS,kBAAMV,EAAgBM,IAJjC,SAMGL,EAAQK,IALJA,S,gBCYFK,MAnBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,IAAKC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,qBAAIT,UAAWC,IAAES,KAAjB,kBAA6BL,KAC7B,qBAAIL,UAAWC,IAAES,KAAjB,sBAAiCH,KACjC,qBAAIP,UAAWC,IAAES,KAAjB,kBAA6BJ,KAC7B,qBAAIN,UAAWC,IAAES,KAAjB,oBAA+BF,KAC/B,qBAAIR,UAAWC,IAAES,KAAjB,gCAA2CD,EAA3C,W,gBCPS,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASb,UAAWC,IAAEa,QAAtB,UACE,oBAAId,UAAWC,IAAEc,KAAjB,SAAwBH,IACvBC,K,qBCJQ,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGjB,UAAWC,IAAEgB,QAAhB,SAA0BA,I,ICuDpBC,E,4MApDbC,MAAQ,CACNd,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPc,cAAgB,kBAAM,EAAKD,MAAMd,KAAO,EAAKc,MAAMZ,QAAU,EAAKY,MAAMb,K,EACxEe,gCAAkC,kBAChCC,KAAKC,MAAyB,IAAlB,EAAKJ,MAAMd,KAAc,EAAKe,kB,EAE5CI,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAaE,EAAUF,GAAc,O,EAI1C/B,QAAU,SAAAkC,GACR,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,4CAGvD,WACE,IAAMvB,EAAQwB,KAAKZ,gBACba,EAAaD,KAAKX,kCAExB,OACE,qCACE,cAACV,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEpB,QAASwC,KAAKb,MACd1B,gBAAiBuC,KAAKR,cACtB9B,QAASsC,KAAKtC,YAIlB,cAACiB,EAAD,CAASC,MAAM,aAAf,SACGJ,EAAQ,EACP,cAAC,EAAD,CACEH,KAAM2B,KAAKb,MAAMd,KACjBE,QAASyB,KAAKb,MAAMZ,QACpBD,IAAK0B,KAAKb,MAAMb,IAChBE,MAAOA,EACPC,mBAAoBwB,EAAa,EAAIA,EAAa,MAGpD,cAACjB,EAAD,CAAcC,QAAQ,+B,GA7ChBiB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BlD,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,2B,kBCAzDD,EAAOC,QAAU,CAAC,OAAS,4B","file":"static/js/main.eb8242fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"notification_message__2b3HX\"};","import PropTypes from 'prop-types';\r\nimport s from './feedback.module.css';\r\nfunction Feedback({ options, onLeaveFeedback, ucFirst }) {\r\n  const buttonsNames = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {buttonsNames.map(button => {\r\n        return (\r\n          <button\r\n            key={button}\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(button)}\r\n          >\r\n            {ucFirst(button)}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nFeedback.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n  ucFirst: PropTypes.func,\r\n};\r\n\r\nexport default Feedback;\r\n","import PropTypes from 'prop-types';\r\nimport s from './statistics.module.css';\r\nfunction Statistics({ good, bad, neutral, total, positivePercentage }) {\r\n  return (\r\n    <ul>\r\n      <li className={s.item}>Good:{good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.item}>Total: {total}</li>\r\n      <li className={s.item}>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './section.module.css';\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.head}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './notification.module.css';\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message}>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport Feedback from './components/feedback/feedback';\nimport Statistics from './components/statistics/statistics';\nimport Section from './components/section/section';\nimport Notification from './components/notification/notification';\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good * 100) / this.totalFeedback());\n\n  clickOnButton = buttonName => {\n    this.setState(prevState => ({\n      [buttonName]: prevState[buttonName] + 1,\n    }));\n  };\n\n  ucFirst = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  render() {\n    const total = this.totalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={this.state}\n            onLeaveFeedback={this.clickOnButton}\n            ucFirst={this.ucFirst}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={percentage > 0 ? percentage : '0'}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"statistics_item__1rWV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"section_head__5wOD5\",\"section\":\"section_section__1OY6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__w5jBt\"};"],"sourceRoot":""}